name: Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [linux, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: linux
            arch: arm64 # Skip arm64 Linux if not needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build binaries
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p dist
          go build -o dist/gocommit-${{ matrix.os }}-${{ matrix.arch }} .

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: gocommit-binaries
          path: dist/

  homebrew:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: gocommit-binaries
          path: dist/

      - name: Create Homebrew formula
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cat <<EOF > gocommit.rb
          class Gocommit < Formula
            desc "Automatically generate and create Git commits"
            homepage "https://github.com/vicendominguez/gocommit"
            url "https://github.com/vicendominguez/gocommit/releases/download/v#{version}/gocommit-darwin-arm64"
            sha256 "$(sha256sum dist/gocommit-darwin-arm64 | cut -d ' ' -f 1)"
            version "$VERSION"

            def install
              bin.install "gocommit-darwin-arm64" => "gocommit"
            end
          end
          EOF

      - name: Upload Homebrew formula
        uses: actions/upload-artifact@v4
        with:
          name: homebrew-formula
          path: gocommit.rb

  debian:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: gocommit-binaries
          path: dist/

      - name: Install dpkg tools
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev

      - name: Create Debian package
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          mkdir -p gocommit_${VERSION}_amd64/usr/local/bin
          cp dist/gocommit-linux-amd64 gocommit_${VERSION}_amd64/usr/local/bin/gocommit
          mkdir -p gocommit_${VERSION}_amd64/DEBIAN
          cat <<EOF > gocommit_${VERSION}_amd64/DEBIAN/control
          Package: gocommit
          Version: ${VERSION}
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: vicendominguez <@vicendominguez>
          Description: Automatically generate and create Git commits
          EOF
          dpkg-deb --build gocommit_${VERSION}_amd64

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: gocommit_${VERSION}_amd64.deb

  release:
    runs-on: ubuntu-latest
    needs: [build, homebrew, debian]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/gocommit-binaries/*
            artifacts/homebrew-formula/gocommit.rb
            artifacts/debian-package/*.deb
